{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "OMEGA API",
    "description": "this API documents all the operations that can be performed on a user "
  },
  "host": "localhost:5000",
  "basePath": "/omega",
  "tags": [
    {
      "name": "users",
      "description": "API for user in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Page to Get all user in the system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "parameters": [
          {
            "in":  "body",
            "name": "body",
            "description": "user that we want to create",
            "schema":{
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/api/users?id={id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Id of user that we can want to get",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "Failed. User not found"
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "required": true,
          "description": "Id of user that we  want to update",
          "type": "string"
        }
      ],
      "put": {
        "summary": "Update user with given ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Failed. User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "id": {
      "properties": {
        "_id": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "Users": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/User"
          }
        }
      }
    }
  }
}